version: '3.9'
services:
  postgres:
    image: postgres
    container_name: {{ cookiecutter.project_slug }}_db
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgresdata:/var/lib/postgresql/data
  redis:
    image: redis:latest
    {% if cookiecutter.use_celery == 'y' %}
    volumes:
      - redis_data:/data
    {% endif %}
  web:
    build: .
    container_name: {{ cookiecutter.project_slug }}_web
    command: ./web_entrypoint.sh
    ports:
      - 8000:8000
    restart: on-failure
    env_file:
      - .env
    volumes:
      - .:/app
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    depends_on:
      - postgres
      - redis
  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 1337:443
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
      - /root/cert/:/etc/nginx/cert
    depends_on:
      - web

  {%- if cookiecutter.use_celery == 'y' %}

  celeryworker:
    build: .
    container_name: {{ cookiecutter.project_slug }}_celeryworker
    command: ./celery_worker_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: on-failure
  celerybeat:
    build: .
    container_name: {{ cookiecutter.project_slug }}_celerybeat
    command: ./celery_beat_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: on-failure

  flower:
    build: .
    container_name: {{ cookiecutter.project_slug }}_celeryflower
    command: ./celery_flower_entrypoint.sh
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: on-failure
  {%- endif %}


volumes:
  postgresdata:
  media:
  static:
  {% if cookiecutter.use_celery == 'y' %}
  redis_data: {}
  {% endif %}
  